#!/bin/sh
### BEGIN INIT INFO
# Provides:          StockEstimator
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts/stops the <%= @name%>
# Description:       This init.d file was autogenerated by puppet deployment of the <%= name%> service 
### END INIT INFO

# Author: Warren Parad <wparad@gmail.com>

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="<%= @name %>"
NAME="<%= @name %>"
SCRIPTNAME=/etc/init.d/$NAME
PID_DIR=/var/run/mono_services/<%= @name %>
PID_FILE="$PID_DIR/process.pid"

# Exit if the package is not installed
[ -x "<%= @t_service_home %>/Main.exe" ] || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

do_start()
{
	echo "checking PID file"
	PCOUNT=$(ps -p $PID | grep -v PID -c)
	if [ -e "$PID_FILE" && $PCOUNT -eq 0 ]; then
		echo "<%= @name %> is already running with PID: `cat $PID_FILE`"
		exit 1;
	fi
	mkdir $PID_DIR -p
	mono <%= @t_service_home %>/Main.exe &
	echo $! > $PID_FILE
}

do_stop()
{
	PID=$(cat $PID_FILE)
	[ -e "$PID_FILE" ] && kill $PID
	PCOUNT=$(ps -p $PID | grep -v PID -c)
	[ -e "$PID_FILE" ] && [ $PCOUNT -eq 0 ] && rm $PID_FILE
}

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" 
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC" 
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" 
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	
	echo "bad choice"
	;;
  usage)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
